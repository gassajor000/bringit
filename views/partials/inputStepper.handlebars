<div class="input-group stepper-container">
    <span class="input-group-btn">
        <button type="button" class="btn btn-default btn-number stepper-full-ht" disabled="disabled" data-type="minus" data-field="quant[1]">
            <span class="glyphicon glyphicon-minus"></span>
        </button>
    </span>
    <input type="text" name="quant[1]" id="stepperInput" class="form-control input-number stepper-full-ht">
    <span class="input-group-btn">
        <button type="button" class="btn btn-default btn-number stepper-full-ht" data-type="plus" data-field="quant[1]">
            <span class="glyphicon glyphicon-plus"></span>
        </button>
    </span>
</div>

<style>
    .stepper-container{
        width: 150px;
    }
    .stepper-full-ht{
        height: 32px;
    }
    .btn-default{
        background-image: none;
    }
</style>
<script>
    var stepperMax = 10;
    var stepperMin = 1;
    var stepperDefault = 1;

    //plugin bootstrap minus and plus
    //http://jsfiddle.net/laelitenetwork/puJ6G/
    $('.btn-number').click(function(e){
        e.preventDefault();
        
        fieldName = $(this).attr('data-field');
        type      = $(this).attr('data-type');
        var input = $("input[name='"+fieldName+"']");
        var currentVal = parseInt(input.val());
        if (!isNaN(currentVal)) {
            if(type == 'minus') {
                
                if(currentVal > stepperMin) {
                    input.val(currentVal - 1).change();
                } 
                if(parseInt(input.val()) == stepperMin) {
                    $(this).attr('disabled', true);
                }

            } else if(type == 'plus') {

                if(currentVal < stepperMax) {
                    input.val(currentVal + 1).change();
                }
                if(parseInt(input.val()) == stepperMax) {
                    $(this).attr('disabled', true);
                }

            }
        } else {
            input.val(0);
        }
    });
    $('.input-number').focusin(function(){
        $(this).data('oldValue', $(this).val());
    });
    $('.input-number').change(function() {
        
        valueCurrent = parseInt($(this).val());
        
        name = $(this).attr('name');
        if(valueCurrent >= stepperMin) {
            $(".btn-number[data-type='minus'][data-field='"+name+"']").removeAttr('disabled')
        } else {
            alert('Sorry, the minimum value was reached');
            $(this).val($(this).data('oldValue'));
        }
        if(valueCurrent <= stepperMax) {
            $(".btn-number[data-type='plus'][data-field='"+name+"']").removeAttr('disabled')
        } else {
            alert('Sorry, the maximum value was reached');
            $(this).val($(this).data('oldValue'));
        }
        
        
    });
    $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) || 
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

    function initStepper(minV, maxV, defaultV){
        stepperMin = minV;
        stepperMax = maxV;
        stepperDefault = defaultV;
        $("#stepperInput").val(stepperDefault);

    }

    function getStepperVal(){
        return $("#stepperInput").val();
    }
</script>
